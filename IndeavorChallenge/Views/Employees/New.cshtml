@using Newtonsoft.Json
@model IndeavorChallenge.ViewModels.EmployeeViewModel
@{
	ViewBag.Title = "Details";
	Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
	var isNew = Model.employee.id == 0;
	var h2Text = isNew? "Add a new Employee": "Details";
}
<h2>@h2Text</h2>

@*BeginForm does not have close tag. Using statement will dispose it when no needed anymore*@
@using (Html.BeginForm("Save", "Employees", null, FormMethod.Post,new{@id = "employeeForm"}))
{
	@Html.ValidationSummary()
	<div class="container">
		<div class="row">
			<div class="col">
				<div class="form-group">
					@Html.LabelFor(x => x.employee.name, new { @class = "text-capitalize" })
					@Html.TextBoxFor(x => x.employee.name, new { @class = "form-control" })
					@Html.ValidationMessageFor(x=>x.employee.name)
				</div>
				<div class="form-group">
					@Html.LabelFor(x => x.employee.surname, new { @class = "text-capitalize" })
					@Html.TextBoxFor(x => x.employee.surname, new { @class = "form-control" })
					@Html.ValidationMessageFor(x=>x.employee.surname)
				</div>
				<div class="form-group">
					@Html.LabelFor(x=>x.employee.hiringDate)
					@Html.DisplayFor(x => x.employee.hiringDate, "{0:d MMM yyyy}", new { @class = "form-control" })
				</div>
			</div>
			<div class="col">
				<div class="form-group">
					@Html.LabelFor(x=>x.skills)
					@Html.DropDownList("skills", new SelectList(Model.skills,"id", "name"), "Select skill", new {@class= "form-control"})
					<button id="addNewSkillBtn" type="button" class="btn btn-primary mt-3">Add</button>
				</div>
			</div>
		</div>
		<div class="row my-5">
			<div class="col-md-auto">
				<table id="employeeSkills" @*data-empl-skills="@JsonConvert.SerializeObject(Model.employee.skills)"*@ class="table table-bordered table-hover">
					<thead>
					<tr>
						<th>Skills</th>
						<th>Action</th>
							
					</tr>
					</thead>
					<tbody>
						@if (Model.employee.skills != null)
						{
							foreach (var skill in Model.employee.skills)
							{
								<tr >
									<td >@Html.DisplayFor(x => skill.name)</td>
									<td ><button type="button" class="btn btn-primary btn-sm js-remove-skill" empl-skill-id="@skill.id" empl-id ="@Model.employee.id">Remove</button></td>
								</tr>

							}
						}
					</tbody>
				</table>
			</div>
		</div>
		<div class="form-group">
			@Html.HiddenFor(x => x.employee.id)
			<button type="submit" class="btn btn-primary">Save</button>
			@if (!isNew)
			{
				<button type="button" id="deleteBtn" class="btn btn-secondary">Delete</button>
			}
		</div>
	</div>
}

@section scripts
{
	<script>
		$(document).ready(function () {

			var emplId = $('#@Html.IdFor(m => m.employee.id)').val();
			var employee = "";
			var table = $("#employeeSkills").DataTable();
			console.log(emplId);

			if (emplId > 0) {
				$.ajax({
					url: '/api/employees/' + emplId,
					type: 'GET',
					datatype: 'json',
					data: {
						"id": emplId
					},
					success: function (result) {
						// Process the response data
						employee = result;
						console.log(employee);
						console.log(employee.name);
					},
					error: function (xhr, status, error) {
						// Handle the error
						console.log(error);
					}
				});
			}

			$("#deleteBtn").on("click", function () {
				var button = $(this);

				console.log(emplId);
				if (confirm("Delete employee?")) {
					console.log("CONFIRMED");
					$.ajax({
						url: "/api/employees/" + emplId,
						method: "DELETE",
						success: function () {
							window.location.href = "/employees/index";
						}
					});
				}


			});

			//ToDo
			$("#addNewSkillBtn").on("click", function () {
				var button = $(this);
				var selectedSkillId = $("#skills option:selected").val();
				var selectedSkillName = $('#skills option:selected').text();
				//var emplSkills = JSON.parse($("#employeeSkills").attr("data-empl-skills"));
				console.log(selectedSkillId);
				console.log(selectedSkillName);
				//console.log(emplSkills);


				$.ajax({
					url: '/api/skills/' + selectedSkillId,
					type: 'GET',
					datatype: 'json',
					data: {
						"skillId": selectedSkillId
					},
					success: function (response) {
						console.log(response);
						//table.row.add([response.name, '<button type="button" class="btn btn-primary btn-sm js-remove-skill" empl-skill-id="' + response.id + '" empl-id ="' + emplId + '">Remove</button>']).draw();
						table.row.add([response.name, '<button type="button" class="btn btn-primary btn-sm js-remove-skill" empl-skill-id="' + response.id + '" empl-id ="' + emplId + '">Remove</button>']).draw();
						employee.skills.push(response);
						console.log(employee.skills);
						//emplSkills.push(response);
						//console.log(emplSkills);
						//var s = $('#employeeSkills').attr('data-empl-skills').Add(response);
						//employee.skills.push(response);
						//console.log(s);

					}

				});
			});

			$('#employeeForm').submit(function (event) {
				if(emplId>0){
					event.preventDefault();
					console.log("PreventDefault");
					

					$.ajax({
						url: "/api/employees/"+emplId,
						type: "PUT",
						dataType: 'json',
						data: JSON.stringify(employee),
						contentType: "application/json",
						success: function (response) {
							console.log("SUCCESS");
						},
						error: function (error) {
							console.log(JSON.stringify(employee));
							console.log("FAILED");
							console.log(error);
						}
					});
				}
			});


			//ToDo
			table.on('click', '.js-remove-skill', function () {
				var emplId = $(this).attr("empl-id");
				var skillId = $(this).attr("empl-skill-id");
				var emplName = $('#@Html.IdFor(x => x.employee.name)').val();
				var emplSurName = $('#@Html.IdFor(x => x.employee.surname)').val();
				var emplSkills = $('#employeeSkills').attr("data-empl-skills");
				@*emplSkills = Object.values(emplSkills);
				skillToDel = emplSkills.filter(x => x.id == skillId);*@
				var arr = table.data().toArray();
				console.log(arr);
				console.log("SkillId " + skillId);
				console.log("Employee " + emplId);


			});

			$('#employeeSkills tbody').on('click', 'tr', function () {
				console.log(table.row(this).data());
			});

		});






	</script>
}

